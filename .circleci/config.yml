version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: update-npm
          command: "sudo /usr/local/bin/npm install -g npm@latest"
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: /usr/local/bin/npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: build
          command: npm run build
  test:
    docker:
      - image: circleci/node:latest
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: test
          command: npm test
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_test_results:
          path: test-results.xml
  deploy:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      IMAGE_NAME: mihaionsoftware/personal-resume
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_SHA1
      - run:
          name: Install envsubst
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Deploy Code
          command: ./scripts/ci-deploy.sh
workflows:
  version: 2
  build-master:
    jobs:
      - test
      - build
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
